{"ast":null,"code":"import { Personne } from '../Models/Personne';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CvService = /*#__PURE__*/(() => {\n  class CvService {\n    constructor(http) {\n      this.http = http;\n      this.listPersonne = [];\n      this.personne = new Personne();\n      this.link = \"http://localhost:3000/api/personnes\";\n      this.listPersonne = [new Personne(1, 'Omar', 'THALJENI', 27, 'omar.png', '07189172', 'Ingénieur Informatique'), new Personne(2, 'Ezzdine', 'Draoui', 34, 'ezzdine.png', '21563625', 'Ingénieur Informatique'), new Personne(3, 'Samia', 'THALJENI', 34, 'samia.png', '78965412', 'Sage femme'), new Personne(4, 'Shayma', 'Werchafani', 27, 'shayma.png', '07189172', 'Ingénieur Informatique')];\n    }\n\n    updatePersonne(personne) {\n      return this.http.put(this.link, personne);\n    }\n\n    getPersonne() {\n      return this.http.get(this.link);\n    }\n\n    getFakePersonne() {\n      return this.listPersonne;\n    }\n\n    addPersonne(personne) {\n      /*     const token = localStorage.getItem('token');\r\n          if(token)\r\n          {\r\n            const params = new HttpParams().set(\"access_token\",token);\r\n            return this.http.post(this.link,personne,{params});\r\n        \r\n          }\r\n       */\n      return this.http.post(this.link, personne);\n    }\n\n    deletePersonne(id) {\n      return this.http.delete(this.link + `/${id}`);\n    }\n\n    addFakePersonne(personne) {\n      personne.id = this.listPersonne[this.listPersonne.length - 1].id + 1;\n      this.listPersonne.push(personne);\n    }\n\n    getPersonnebyId(id) {\n      return this.http.get(this.link + `/${id}`);\n    }\n\n    findByFirstName(firstName) {\n      // const filter = `{\"where\": {\"firstName\":{\"like\": \"%${firstName}%\"}}}`;\n      const filter = `{'where': {'firstName':{'like': '%th%'}}}`;\n      const params = new HttpParams().set('filter', filter);\n      return this.http.get(this.link, {\n        params\n      });\n    }\n\n  }\n\n  CvService.ɵfac = function CvService_Factory(t) {\n    return new (t || CvService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CvService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CvService,\n    factory: CvService.ɵfac,\n    providedIn: 'root'\n  });\n  return CvService;\n})();","map":null,"metadata":{},"sourceType":"module"}